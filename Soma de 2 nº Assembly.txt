;Programa Soma de dois numeros de 1 digito
;Introdução ao Assembly
;Author: Vitor Bruno, FEAP

SYS_EXIT        equ 1
SYS_READ        equ 3
SYS_WRITE       equ 4
STDIN           equ 0
STDOUT          equ 1

section .data       ; Seção de dados iniciada
    
    msg1 db "insira um dígito", 0xa, 0xd            ; Expecifica como a informação vai ser armazenada
    len1 equ $ -msg1
                                                    ; Chamada (mensagem) para informar o 1° número         
    msg2 db "insira o segundo dígito", 0xa, 0xd
    len2  equ $ -msg2
                                                    ; chamada (mensagem) para informar o 2° número
    msg3 db "A soma é: "
    len3  equ $ -msg3
                                                    ; chamada (mensagem) para informar o resultado (soma)
section .bss        ; Seção de declaração de vaviaveis a serem processadas
    num1 resb 2
    num2 resb 2
    res  resb STDOUT
    
section .text       ; Seção de exeção
    global _start       

_start:             ; Iniciando programação

                    ; imprime a string msg1
    mov eax, SYS_WRITE
    mov ebx, STDOUT
    mov ecx, msg1
    mov edx, len1
    int 0x80
                    ; lê o primeiro numero
    mov eax, SYS_READ
    mov ebx, STDIN
    mov ecx, num1
    mov edx, 2
    int 0x80
                    ; imprime a string 2
    mov eax, SYS_WRITE
    mov ecx, msg2
    mov edx, len2
    int 0x80
                    ; lê o numero 2 
    mov eax, SYS_READ
    mov ebx, STDIN
    mov ecx, num2
    mov edx, 2
    int 0x80
                    ; move o primeiro numero para o registro eax e subtrai o ASCII 0 para converter pro DEC (decimal)
    mov eax, [num1]
    sub eax, "0"
                    ; move o segundo numero para o registro ebv e subtrai p ASCII 0 para converter pro DEC (decimal)
    mov ebx, [num2] 
    sub ebx, "0"
                    ; soma eax e ebx
    add eax, ebx
                    ; adiciona "0" para converter de decimal para ASCII
    add eax, "0"
                    ; armazenar a soma na localização de memória "res"
    mov [res], eax
                    ; imprime a string msg3
    mov eax, SYS_WRITE
    mov ebx, STDOUT
    mov ecx, msg3
    mov edx, len3
    int 0x80
                    ; imprime o resultado
    mov eax, SYS_WRITE
    mov ebx, STDOUT
    mov ecx, res
    mov edx, 2
    int 0x80